<?php
$plugins = $this->getHelperPluginManager();

$searchingForm = $plugins->has('searchingForm') ? $plugins->get('searchingForm') : null;

// Safe access to ThemeFunctions helper with fallback shim
$themeFunctionsLocal = null;
if ($plugins) {
    if ($plugins->has('themeFunctions')) {
        $themeFunctionsLocal = $plugins->get('themeFunctions');
    } elseif ($plugins->has('ThemeFunctions')) {
        $themeFunctionsLocal = $plugins->get('ThemeFunctions');
    }
}
if (!$themeFunctionsLocal) {
    $themeFunctionsLocal = new class {
        public function getFontFamily($fontKey) {
            $fontMap = [
                'helvetica' => 'Helvetica Neue, Arial, sans-serif',
                'roboto' => 'Roboto, Arial, sans-serif',
                'open_sans' => 'Open Sans, Arial, sans-serif',
                'lato' => 'Lato, Arial, sans-serif',
                'montserrat' => 'Montserrat, Arial, sans-serif',
                'source_sans' => 'Source Sans Pro, Arial, sans-serif',
                'nunito' => 'Nunito, Arial, sans-serif',
                'poppins' => 'Poppins, Arial, sans-serif',
                'inter' => 'Inter, Arial, sans-serif',
                'work_sans' => 'Work Sans, Arial, sans-serif',
                'fira_sans' => 'Fira Sans, Arial, sans-serif',
                'verdana' => 'Verdana, Arial, sans-serif',
                'arial' => 'Arial, sans-serif',
                'merriweather' => 'Merriweather, Georgia, serif',
                'playfair' => 'Playfair Display, Georgia, serif',
                'crimson' => 'Crimson Text, Georgia, serif',
                'libre_baskerville' => 'Libre Baskerville, Georgia, serif',
                'lora' => 'Lora, Georgia, serif',
                'pt_serif' => 'PT Serif, Georgia, serif',
                'source_serif' => 'Source Serif Pro, Georgia, serif',
                'georgia' => 'Georgia, serif',
                'times' => 'Times New Roman, serif',
                'oswald' => 'Oswald, Arial, sans-serif',
                'raleway' => 'Raleway, Arial, sans-serif',
                'bebas_neue' => 'Bebas Neue, Arial, sans-serif',
                'anton' => 'Anton, Arial, sans-serif',
                'dancing_script' => 'Dancing Script, cursive',
                'pacifico' => 'Pacifico, cursive',
                'fira_code' => 'Fira Code, Consolas, monospace',
                'source_code' => 'Source Code Pro, Consolas, monospace',
                'courier' => 'Courier New, monospace',
                'system' => 'system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
            ];
            return $fontMap[$fontKey] ?? $fontMap['system'];
        }
    };
}


// Enhanced branding settings - use passed variables or fallback to theme settings
$siteLogo = isset($this->siteLogo) ? $this->siteLogo : $this->themeSettingAssetUrl('site_logo');
$logoLinkPage = isset($this->logoLinkPage) ? $this->logoLinkPage : $this->themeSetting('logo_link_page', '/');
$siteTagline = isset($this->siteTagline) ? $this->siteTagline : $this->themeSetting('site_tagline', '');
$headerLayout = isset($this->headerLayout) ? $this->headerLayout : $this->themeSetting('header_layout', 'title_only');
$siteTitle = isset($this->siteTitle) ? $this->siteTitle : $this->escapeHtml($site->title());

// Debug logo information
@file_put_contents('/tmp/sufism-debug.log', "Logo debug - siteLogo: " . ($siteLogo ?: 'empty') . ", headerLayout: " . $headerLayout . "\n", FILE_APPEND);

// Legacy logo support
$legacyLogo = ($this->themeSetting('logo')) ? '<img src="' . $this->themeSettingAssetUrl('logo') . '" title="Logo" alt="">' : '';

// Generate logo HTML based on header layout
$logoHTML = '';
if ($siteLogo && ($headerLayout === 'logo_only' || $headerLayout === 'logo_and_title' || $headerLayout === 'logo_with_tagline')) {
    $logoHTML = '<img src="' . $siteLogo . '" alt="' . $this->escapeHtml($siteTitle) . ' Logo" class="site-logo">';
} elseif ($legacyLogo) {
    $logoHTML = $legacyLogo;
}

// Determine what to show in header
$showTitle = ($headerLayout === 'title_only' || $headerLayout === 'logo_and_title');
$showLogo = ($headerLayout === 'logo_only' || $headerLayout === 'logo_and_title' || $headerLayout === 'logo_with_tagline') && !empty($logoHTML);
$showTagline = ($headerLayout === 'logo_with_tagline' && !empty($siteTagline));

// Enhanced debug logging
@file_put_contents('/tmp/sufism-debug.log', "LOGO DEBUG:\n", FILE_APPEND);
@file_put_contents('/tmp/sufism-debug.log', "  siteLogo: " . ($siteLogo ?: 'EMPTY') . "\n", FILE_APPEND);
@file_put_contents('/tmp/sufism-debug.log', "  headerLayout: " . $headerLayout . "\n", FILE_APPEND);
@file_put_contents('/tmp/sufism-debug.log', "  logoHTML: " . ($logoHTML ?: 'EMPTY') . "\n", FILE_APPEND);
@file_put_contents('/tmp/sufism-debug.log', "  showLogo: " . ($showLogo ? 'TRUE' : 'FALSE') . "\n", FILE_APPEND);
@file_put_contents('/tmp/sufism-debug.log', "  showTitle: " . ($showTitle ? 'TRUE' : 'FALSE') . "\n", FILE_APPEND);
@file_put_contents('/tmp/sufism-debug.log', "  showTagline: " . ($showTagline ? 'TRUE' : 'FALSE') . "\n", FILE_APPEND);

// Load handled centrally by Module.php with cache-busting; avoid duplicate includes here
?>

<div class="title-bar" data-responsive-toggle="responsive-menu" data-hide-for="large">
    <button class="menu-toggle" type="button" data-toggle="offCanvas" aria-label="<?php echo $this->translate('Menu'); ?>"><i class="fas fa-bars"></i></button>
    <div class="site-branding mobile-branding">
        <a href="<?php echo $logoLinkPage; ?>" class="site-branding-link">
            <?php if ($showLogo && $logoHTML): ?>
                <?php echo $logoHTML; ?>
            <?php endif; ?>
            <?php if ($showTitle): ?>
                <span class="site-title-label"><?php echo $siteTitle; ?></span>
            <?php endif; ?>
            <?php if ($showTagline): ?>
                <span class="site-tagline"><?php echo $this->escapeHtml($siteTagline); ?></span>
            <?php endif; ?>
        </a>
    </div>
</div>

<div class="desktop">
    <div class="site-branding desktop-branding" style="text-align: center; width: 100%; padding: 20px;">
        <a href="<?php echo $logoLinkPage; ?>" class="site-branding-link" style="display: block; text-decoration: none;">
            <?php if ($siteLogo): ?>
                <img src="<?php echo $siteLogo; ?>" alt="<?php echo $this->escapeHtml($siteTitle); ?> Logo" class="site-logo" style="max-height: 80px; width: auto; display: block; margin: 0 auto;">
            <?php endif; ?>

            <?php /* Tagline rendered in layout header only to prevent duplicates. */ ?>
        </a>
    </div>

  <!-- Navigation removed from header - available in off-canvas menu -->

  <!-- Main navigation removed from header - available in off-canvas mobile menu -->
  <div class="search">
        <?php if ($searchingForm): ?>
        <?= $searchingForm('search/search-form-simple') ?>
        <?php else: ?>
        <?= $this->partial('common/search-form') ?>
        <?php endif; ?>
  </div>
</div>
