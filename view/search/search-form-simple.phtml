<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var \Laminas\Form\Form $form
 * @var \AdvancedSearch\Api\Representation\SearchConfigRepresentation $searchConfig
 * @var \AdvancedSearch\Api\Representation\SearchConfigRepresentation $searchPage Alias of $searchConfig
 */

// This quick form displays only the field "q", similarly to the standard search form.

$plugins = $this->getHelperPluginManager();
$translate = $plugins->get('translate');
$formHelper = $plugins->get('form');
$formElement = $plugins->get('formElement');
$escape = $this->plugin('escapeHtml');

// Sanitize query parameters to prevent XSS vulnerabilities
$rawParams = $this->params()->fromQuery() ?: [];
$params = [];
foreach ($rawParams as $key => $value) {
    if (is_array($value)) {
        // Recursively sanitize array values
        $params[$key] = array_map(function($item) use ($escape) {
            return is_string($item) ? $escape($item) : $item;
        }, $value);
    } else {
        // Sanitize string values
        $params[$key] = is_string($value) ? $escape($value) : $value;
    }
}

$form
    ->setAttribute('id', 'form-search-simple')
    ->setData($params)
    ->prepare();

if (!$form->has('q')) {
    return;
}
$q = $form->get('q');

$form->setAttribute('class', 'search-form input-group');
$q->setAttribute('class', 'input-group-field');
$q->removeAttribute('form');
?>

<?= $formHelper->openTag($form) ?>
    <?= $formElement($q
        ->setAttribute('placeholder', $translate('Search'))
        ->setAttribute('aria-label', $translate('Search'))) ?>
    <div class="input-group-button">
        <button class="button" type="submit"><?= $translate('Search') ?></button>
    </div>
<?= $formHelper->closeTag() ?>
